name: GitHub Action for building DolphinOS ISO

on: workflow_dispatch

permissions:
  contents: write

jobs:
  build_iso:
    name: Build ${{ matrix.edition }} ISO
    runs-on: self-hosted

    container:
      image: ghcr.io/dolphinos-development/dolphinos-buildsystem-images/arch_iso_builder_image:latest
      options: --privileged
      env:
        TZ: Europe/Madrid

    strategy:
      matrix:
        edition: [intel-amd, nvidia]

    steps:
      - name: Set current date and hour as environment variable
        run: echo "NOW=$(date +'%Y-%m-%d_%H-%M')" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          ref: main
          path: repo

      - name: Fix workspace permissions
        working-directory: repo
        run: sudo chown -R builduser:builduser .

      - name: Cache pacman packages
        uses: actions/cache@v4
        with:
          path: /var/cache/pacman/pkg
          key: ${{ runner.os }}-pacman-${{ matrix.edition }}-${{ hashFiles(format('repo/{0}/archiso/packages.x86_64', matrix.edition)) }}
          restore-keys: |
            ${{ runner.os }}-pacman-${{ matrix.edition }}-

      - name: Download and copy system packages
        working-directory: repo/${{ matrix.edition }}
        run: |
          mkdir -p archiso/airootfs/var/dolphinos-packages
          mkdir pkgs
          if [ "${{ matrix.edition }}" = "intel-amd" ]; then
            sudo pacman -Syw --noconfirm --cachedir pkgs dolphinos-configs dolphinos-dolphin-data
            cp pkgs/dolphinos-configs*.pkg.tar.zst archiso/airootfs/var/dolphinos-packages/dolphinos-configs.pkg.tar.zst
          else
            sudo pacman -Syw --noconfirm --cachedir pkgs dolphinos-configs-nvidia dolphinos-dolphin-data
            cp pkgs/dolphinos-configs-nvidia*.pkg.tar.zst archiso/airootfs/var/dolphinos-packages/dolphinos-configs-nvidia.pkg.tar.zst
          fi
          cp pkgs/dolphinos-dolphin-data*.pkg.tar.zst archiso/airootfs/var/dolphinos-packages/dolphinos-dolphin-data.pkg.tar.zst

      - name: Build ISO
        working-directory: repo/${{ matrix.edition }}
        run: |
          rm -rf work build
          mkdir work build
          sudo mkarchiso -v -w work -o build archiso
          sudo rm -rf work

      - name: Generate hashes
        working-directory: repo/${{ matrix.edition }}/build
        run: |
          sha256sum dolphinos*.iso > dolphinos-${{ matrix.edition }}.sha256

      - name: Upload ISO to Sourceforge Releases
        working-directory: repo/${{ matrix.edition }}/build
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -t ssh-ed25519 frs.sourceforge.net > ~/.ssh/known_hosts
          eval $(ssh-agent)
          ssh-add - <<< "$SSH_KEY"
          if [ "${{ matrix.edition }}" = "intel-amd" ]; then
            rsync -avz -e "ssh -o StrictHostKeyChecking=no" dolphinos*.iso dolphinos*.sha256 dolphinos@frs.sourceforge.net:/home/frs/project/dolphinos/DolphinOS
          else
            rsync -avz -e "ssh -o StrictHostKeyChecking=no" dolphinos*.iso dolphinos*.sha256 dolphinos@frs.sourceforge.net:/home/frs/project/dolphinos/DolphinOS-NVIDIA
          fi
        env:
          SSH_KEY: ${{ secrets.SOURCEFORGE_PRIVATE_KEY }}

      - name: Publish Sourceforge link to releases
        uses: ncipollo/release-action@v1
        with:
          body: "Automatically built latest ISO\nLink: https://sourceforge.net/projects/dolphinos"
          tag: "DolphinOS-ISO-${{ env.NOW }}"
          allowUpdates: true
          makeLatest: true
          artifacts: "repo/${{ matrix.edition }}/build/dolphinos*.sha256"
