name: GitHub Action for building DolphinOS ISO

on: workflow_dispatch

jobs:
  build_iso:
    name: Create and build DolphinOS ISO
    runs-on: ubuntu-latest

    permissions:
      contents: write

    container:
      image: archlinux:latest
      options: --privileged
      env:
        TZ: Europe/Madrid

    steps:
    - name: Update packages and install required dependencies for the job
<<<<<<< HEAD
      run: |
<<<<<<< HEAD
        echo -e "[dolphinos-repo]\nSigLevel = Optional TrustedOnly\nServer = https://jesusxd88.github.io/\$repo/\$arch" >> /etc/pacman.conf
        pacman -Syu --noconfirm --needed sudo git base-devel reflector archiso mkinitcpio-archiso squashfs-tools wget base-devel curl lftp networkmanager rsync openssh
=======
        timedatectl set-timezone Europe/Madrid
=======
      run: | 
>>>>>>> 0b57308 (Correctly set timezone)
        pacman -Syu --noconfirm --needed sudo git base-devel reflector archiso mkinitcpio-archiso squashfs-tools wget base-devel curl lftp networkmanager
>>>>>>> 4de7316 (Change timezone)
        reflector --latest 20 --protocol https --sort rate --save /etc/pacman.d/mirrorlist
        pacman -Syu --noconfirm
        useradd builduser -m
        passwd -d builduser
        echo "builduser ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
        mkdir buildworkdir
        chown -R builduser buildworkdir
        cd buildworkdir
        sudo -u builduser git clone https://aur.archlinux.org/yay-bin.git
        cd yay-bin
        sudo -u builduser makepkg -si --noconfirm
        sudo -u builduser yay -S --noconfirm cubeb libspng
    - name: Set current date and hour as environment variable
      run: echo "NOW=$(date +'%Y-%m-%d_%H-%M')" >> $GITHUB_ENV
<<<<<<< HEAD
    - uses: actions/checkout@v3
      with:
        ref: nvidia
    - name: Download and copy system packages to archiso
      run: |
        mkdir -p archiso/airootfs/var/dolphinos-packages
        mkdir pkgs
        pacman -Syw --noconfirm --cachedir pkgs dolphinos-configs-nvidia dolphinos-dolphin-data
        cp pkgs/dolphinos-configs-nvidia*.pkg.tar.zst archiso/airootfs/var/dolphinos-packages/dolphinos-configs-nvidia.pkg.tar.zst
        cp pkgs/dolphinos-dolphin-data*.pkg.tar.zst archiso/airootfs/var/dolphinos-packages/dolphinos-dolphin-data.pkg.tar.zst
=======
    # - name: Build ISO
    #   run: |
    #     mkdir work
    #     mkdir build
    #     mkarchiso -v -w work -o build archiso
    #     rm -rf work
    # - name: Upload ISO to releases
    #   uses: svenstaro/upload-release-action@v2
    #   with:
    #     file_glob: true
    #     file: build/dolphinos*.iso
    #     tag: DolphinOS-ISO-${{ env.NOW }}
    #     prerelease: false
    #     overwrite: true
    #     body: "Automatically built latest ISO"
    #     make_latest: true
    - uses: actions/checkout@v3
      with:
        ref: nvidia
>>>>>>> f790810 (Setup action for building NVIDIA image)
    - name: Build NVIDIA ISO
      run: |
        mkdir work
        mkdir build
        mkarchiso -v -w work -o build archiso
        rm -rf work
<<<<<<< HEAD
    - name: Upload NVIDIA ISO to Sourceforge releases
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -t ssh-ed25519 frs.sourceforge.net > ~/.ssh/known_hosts
        eval $(ssh-agent)
        ssh-add - <<< "$SSH_KEY"
        rsync -avz -e "ssh -o StrictHostKeyChecking=no" build/dolphinos*.iso dolphinos@frs.sourceforge.net:/home/frs/project/dolphinos/DolphinOS-NVIDIA
      env:
        SSH_KEY: ${{ secrets.SOURCEFORGE_PRIVATE_KEY }}
    - uses: actions/checkout@v3
=======
    - name: Upload NVIDIA ISO to releases
      uses: svenstaro/upload-release-action@v2
>>>>>>> f790810 (Setup action for building NVIDIA image)
      with:
<<<<<<< HEAD
        ref: main
    - name: Download and copy system packages to archiso
      run: |
        mkdir -p archiso/airootfs/var/dolphinos-packages
        mkdir pkgs
        pacman -Syw --noconfirm --cachedir pkgs dolphinos-configs dolphinos-dolphin-data
        cp pkgs/dolphinos-configs*.pkg.tar.zst archiso/airootfs/var/dolphinos-packages/dolphinos-configs.pkg.tar.zst
        cp pkgs/dolphinos-dolphin-data*.pkg.tar.zst archiso/airootfs/var/dolphinos-packages/dolphinos-dolphin-data.pkg.tar.zst
    - name: Build ISO
      run: |
        rm -rf work
        rm -rf build
        mkdir work
        mkdir build
        mkarchiso -v -w work -o build archiso
        rm -rf work
    - name: Upload ISO to Sourceforge Releases
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -t ssh-ed25519 frs.sourceforge.net > ~/.ssh/known_hosts
        eval $(ssh-agent)
        ssh-add - <<< "$SSH_KEY"
        rsync -avz -e "ssh -o StrictHostKeyChecking=no" build/dolphinos*.iso dolphinos@frs.sourceforge.net:/home/frs/project/dolphinos/DolphinOS
      env:
        SSH_KEY: ${{ secrets.SOURCEFORGE_PRIVATE_KEY }}
    - name: Publish Sourceforge link to releases
      uses: ncipollo/release-action@v1
      with:
        body: "Automatically built latest ISO\nLink: https://sourceforge.net/projects/dolphinos"
        tag: "DolphinOS-ISO-${{ env.NOW }}"
        allowUpdates: true
        makeLatest: true
=======
        file_glob: true
        file: build/dolphinos*.iso
        tag: DolphinOS-ISO-${{ env.NOW }}
        prerelease: false
        overwrite: true
        body: "Automatically built latest ISO"
        make_latest: true
>>>>>>> 04d1f27 (Changed upload to release settings)
